---
title: "flow_analysis"
author: "Felipe ten Caten - ftencat@emory.edu"
editor_options: 
  chunk_output_type: console
---

```{r Load libraries}
library(tidyverse)
library(ggfortify)
```

```{r Load files}
df <- readxl::read_excel('data/raw/flow_cytometry/20231127_Lancioni_Master_file.xlsx', 
                         na = 'n/a')

smpl.opioid <- readxl::read_excel('data/raw/CTN067_clinical_summary_and_PBMC_counts .xlsx') 

smpl.opioid.clinical <- readxl::read_excel('data/raw/MASTER-CLINICAL-0067 STUDY data_12_23_20.xlsx')

smpl.hiv <- readxl::read_excel('data/raw/CTN067_clinical_summary_and_PBMC_counts .xlsx', 
                               sheet = 'HIV+ controls')
```

```{r CD4 counts and VL cleaning}
control.tidy <- smpl.hiv |> 
  select(`Lab ID`, `HIV Viral Load`, `CD4 count`) |> 
  mutate(`HIV Viral Load` = as.numeric(sub('<', '', `HIV Viral Load`)),
         `CD4 count` = as.numeric(sub(';.*', '', `CD4 count`)),
         Treatment = 'Control', timepoint = 'Control') |> 
  filter(!is.na(`HIV Viral Load`)) |> 
  rename(`Viral load` = `HIV Viral Load`, CD4 = `CD4 count`) |> 
  pivot_longer(-c(`Lab ID`, Treatment, timepoint), names_to = 'feature')

smpl.opioid.tidy <- smpl.opioid %>% 
  select(`Lab ID`, Treatment, `Viral load`, CD4) %>%
  mutate(timepoint = sub('.*-M', 'M', `Lab ID`)) %>% 
  mutate(timepoint = factor(timepoint, levels = c('M0', 'M3', 'M6'))) %>% 
  mutate(`Viral load` = ifelse(`Viral load` == 'UD', 20, `Viral load`)) %>% 
  mutate(`Viral load` = as.double(`Viral load`), CD4 = as.double(CD4)) |> 
  pivot_longer(-c(`Lab ID`, Treatment, timepoint), names_to = 'feature') |> 
  bind_rows(control.tidy)
```

```{r EDA}
smpl.vl <- smpl.opioid.tidy |>  
  select(`Lab ID`, feature, value) |> 
  pivot_wider(names_from = 'feature', values_from = 'value')

unstim.df <- df |> 
  mutate(timepoint = paste0('M', sub(' .*', '', timepoint))) |> 
  mutate(`Lab ID` = ifelse(grepl('CL', ID), ID, 
                           paste(ID, timepoint, sep = '-'))) |> 
  left_join(smpl.vl) |> 
  relocate(`Lab ID`, `Viral load`, CD4)  |> 
  filter(stim == 'UNSTIM') |>  
  select(where(~sum(.x < 0, na.rm = T)/length(.x) < 0.1)) |>      # remove flow gates with more 10% negative values (compensation problem)
  mutate(across(11:972, ~log1p(.x))) |> 
  select(where(~sum(is.na(.x))/length(.x) < 1/3)) |> # remove flow gates with more 1/3 NA
  mutate_all(~ifelse(is.na(.x), mean(.x, na.rm = TRUE), .x)) |>  
  filter(sample_number != 25)

zero.var <- which(apply(unstim.df, 2, var) == 0) # remove zero variance columns
unstim.df <- unstim.df[,-zero.var]

prcomp.df <- prcomp(unstim.df[,11:966], scale. = T)

pheno <- unstim.df[, 1:10] |> 
  mutate(sampleid = paste(sample_number, group, timepoint, sep = '_')) |> 
  column_to_rownames('sampleid') |> 
  mutate(group_timepoint = paste(group, timepoint, sep = '_')) |> 
  mutate(logVL = log10(`Viral load`))

flow_group_id_pca <- autoplot(prcomp.df, data = pheno, shape = 'group', 
                              fill = 'ID', size = 3) +
  scale_shape_manual(values = c(21, 22, 23)) +
  guides(fill = guide_legend(override.aes=list(shape = c(21)))) 
  
ggsave('results/figures/flow_cytometry/flow_pca_group_ID.pdf', flow_group_id_pca)  

flow.pca <- autoplot(prcomp.df, data = pheno, shape = 'group', 
                     fill = 'timepoint', size = 3) +
  scale_shape_manual(values = c(21, 22, 23)) +
  guides(fill = guide_legend(override.aes=list(shape = c(21))))

#ggsave('results/figures/flow_cytometry/flow_pca_group_timepoint.pdf', flow.pca)

flow_vl.pca <- autoplot(prcomp.df, data = pheno, shape = 21, 
                        fill = 'timepoint', size = 'logVL') 

#ggsave('results/figures/flow_cytometry/flow_pca_VL_timepoint.pdf', flow_vl.pca)
```

```{r EDA all stimuli}
stimuli.df <- df |> 
  mutate(timepoint = paste0('M', sub(' .*', '', timepoint))) |> 
  mutate(`Lab ID` = ifelse(grepl('CL', ID), ID, 
                           paste(ID, timepoint, sep = '-'))) |> 
  left_join(smpl.vl) |> 
  relocate(`Lab ID`, `Viral load`, CD4)  |> 
  filter(stim %in% c('UNSTIM', 'GAG', 'PMA'))  |>  
  select(where(~sum(.x < 0, na.rm = T)/length(.x) < 0.1)) |>       # remove flow gates with more 10% negative values (compensation problem)
  mutate(across(11:962, ~log1p(.x))) |> 
  select(where(~sum(is.na(.x))/length(.x) < 1/3)) |> # remove flow gates with more 1/3 NA
  mutate_all(~ifelse(is.na(.x), mean(.x, na.rm = TRUE), .x)) |>  
  filter(sample_number != 25)

#zero.var <- which(apply(stimuli.df, 2, var) == 0) # remove zero variance columns
#stimuli.df <- stimuli.df[,-zero.var]

prcomp.df <- prcomp(stimuli.df[,11:462], scale. = T)

pheno <- stimuli.df[, 1:10] |> 
  mutate(sampleid = paste(sample_number, group, timepoint,stim, sep = '_')) |> 
  column_to_rownames('sampleid') |> 
  mutate(group_timepoint = paste(group, timepoint, sep = '_')) |> 
  mutate(logVL = log10(`Viral load`))

flow_group_id_pca 
autoplot(prcomp.df, data = pheno, shape = 'stim', 
                              fill = 'timepoint', size = 3) +
  scale_shape_manual(values = c(21, 22, 23)) +
  guides(fill = guide_legend(override.aes=list(shape = c(21)))) 
  
#ggsave('results/figures/flow_cytometry/flow_pca_group_ID.pdf', flow_group_id_pca)  
```


```{r Univariate analysis}
unstim.df <- df |> 
  mutate(timepoint = ifelse(grepl('5_E01.fcs',`Sample:`), 
                            '3 Months', timepoint)) |> # fix E01.fcs timepoint
  mutate(timepoint = paste0('M', sub(' .*', '', timepoint))) |> 
  mutate(`Lab ID` = ifelse(grepl('CL', ID), ID, 
                           paste(ID, timepoint, sep = '-'))) |> 
  left_join(smpl.vl) |> 
  relocate(`Lab ID`, `Viral load`, CD4)  |> 
  filter(stim == 'UNSTIM') |>  
  select(where(~sum(.x < 0, na.rm = T)/length(.x) < 0.1)) |> # remove flow gates with more 10% negative values (compensation problem)
  #mutate(across(11:972, ~log1p(.x))) |> 
  select(where(~sum(is.na(.x))/length(.x) < 1/3)) |> # remove flow gates with more 1/3 NA
  mutate_all(~ifelse(is.na(.x), mean(.x, na.rm = TRUE), .x)) |>  
  filter(sample_number != 25)

flow.tidy <- recipe(`Lab ID` ~ ., data = unstim.df) %>%
  step_nzv(all_predictors(), freq_cut = 85/15, unique_cut = 25) |> 
  prep() |> 
  bake(unstim.df) |> 
  relocate(`Lab ID`) |>   
  pivot_longer(-c(`Lab ID`:timepoint))

flow.stat <- flow.tidy |> 
  group_by(timepoint, name) |>
  filter(var(value) !=0) |> 
  wilcox_test(value ~ group, p.adjust.method = 'fdr')

flow.stat.signif.M0 <- flow.stat |>
  filter(p.adj < 0.05, timepoint == 'M0', group2 != 'Viremic Control')

flow.stat.signif.M3 <- flow.stat |>
  filter(p.adj < 0.05, timepoint == 'M3')

flow.stat.signif.M6 <- flow.stat |>
  filter(p.adj < 0.05, timepoint == 'M6')


## Heatmap
library(ComplexHeatmap)
library(circlize)

# M0 Viremic
flow.stat <- flow.tidy |> 
  filter(timepoint == 'M0') |> 
  mutate(group2 = ifelse(grepl('Viremic', group), 'non-OUD', 'OUD')) |> 
  group_by(name) |>
  filter(var(value) !=0) |> 
  wilcox_test(value ~ group2) |> 
  adjust_pvalue(p.col = 'p', method = 'fdr')

flow.stat.signif.M0.viremic <- flow.stat |>
  filter(p.adj < 0.1)

m0.viremic.signif.df <- flow.tidy |> 
  filter(timepoint == 'M0', name %in% flow.stat.signif.M0.viremic$name) |> 
  select(ID, group, name, value) |>
  unique() |> 
  mutate(name = sub('\\)', ' MFI',
                    sub('Median \\(', '', 
                        sub("Freq. of Parent", "Freq.", 
                            sub('.*ive/', '', name))))) |>
  pivot_wider(names_from = 'name', values_from = 'value') |> 
  arrange(group) |> 
  column_to_rownames('ID')

scaled.expr = t(scale(log1p(m0.viremic.signif.df[,-1])))

col_fun = colorRamp2(c(-4, -2, 0, 2, 4), c('darkblue', 'blue', 'white', 'red', 'darkred'))

column_ha = HeatmapAnnotation(Treatment = m0.viremic.signif.df$group,
                              col = list(Treatment = c("TAU" = "#66C2A5", 
                                                       "Naltrexone" = "#8DA0CB",
                                                       'Viremic Control' = 'orange')))

ht_list = Heatmap(scaled.expr,  name = "z-score",
                  split = 2, column_split = 2,
                  column_title = NULL,
                  row_title = NULL,
                  top_annotation = column_ha,
                  show_row_names = T,
                  show_column_names = F,
                  col = col_fun,
                  row_names_gp = gpar(fontsize = 6),
                  column_names_rot = 45,
                  heatmap_width = unit(10, "cm"), 
                  heatmap_height =  unit(7, "cm"),
                  border = TRUE)

draw(ht_list, heatmap_legend_side = "left", annotation_legend_side = "left",
      column_title = "Month 0")


# M0
m0.signif.df <- flow.tidy |> 
  filter(timepoint == 'M0', name %in% flow.stat.signif.M0$name, 
         group != 'Viremic Control') |> 
  select(ID, group, name, value) |> 
  mutate(name = sub('\\)', ' MFI',
                    sub('Median \\(', '', 
                        sub("Freq. of Parent", "Freq.", 
                            sub('.*ive/', '', name))))) |>
  pivot_wider(names_from = 'name', values_from = 'value') |> 
  arrange(group) |> 
  column_to_rownames('ID')

scaled.expr = t(scale(log1p(m0.signif.df[,-1])))

col_fun = colorRamp2(c(-4, -2, 0, 2, 4), c('darkblue', 'blue', 'white', 'red', 'darkred'))

column_ha = HeatmapAnnotation(Treatment = m0.signif.df$group,
                              col = list(Treatment = c("TAU" = "#66C2A5", 
                                                       "Naltrexone" = "#8DA0CB")))

ht_list = Heatmap(scaled.expr,  name = "z-score",
                  split = 2, column_split = 2,
                  column_title = NULL,
                  row_title = NULL,
                  top_annotation = column_ha,
                  show_row_names = T,
                  show_column_names = F,
                  col = col_fun,
                  row_names_gp = gpar(fontsize = 6),
                  column_names_rot = 45,
                  heatmap_width = unit(10, "cm"), 
                  heatmap_height =  unit(3, "cm"),
                  border = TRUE)

draw(ht_list, heatmap_legend_side = "left", annotation_legend_side = "left",
      column_title = "Month 0")

# M3
m3.signif.df <- flow.tidy |> 
  filter(timepoint == 'M3', name %in% flow.stat.signif.M3$name) |> 
  select(ID, group, name, value) |> 
  mutate(name = sub('\\)', ' MFI',
                    sub('Median \\(', '', 
                        sub("Freq. of Parent", "Freq.", 
                            sub('.*ive/', '', name))))) |>
  pivot_wider(names_from = 'name', values_from = 'value') |> 
  arrange(group) |> 
  column_to_rownames('ID')

scaled.expr = t(scale(log1p(m3.signif.df[,-1])))

col_fun = colorRamp2(c(-4, -2, 0, 2, 4), c('darkblue', 'blue', 'white', 'red', 'darkred'))

column_ha = HeatmapAnnotation(Treatment = m3.signif.df$group,
                              col = list(Treatment = c("TAU" = "#66C2A5", 
                                                       "Naltrexone" = "#8DA0CB")))

ht_list = Heatmap(scaled.expr,  name = "z-score",
                  split = 2, column_split = 2,
                  column_title = NULL,
                  row_title = NULL,
                  top_annotation = column_ha,
                  show_row_names = T,
                  show_column_names = F,
                  col = col_fun,
                  row_names_gp = gpar(fontsize = 6),
                  column_names_rot = 45,
                  heatmap_width = unit(10, "cm"), 
                  heatmap_height =  unit(7, "cm"),
                  border = TRUE)

draw(ht_list, heatmap_legend_side = "left", annotation_legend_side = "left",
      column_title = "Month 3")

# M6
m6.signif.df <- flow.tidy |> 
  filter(timepoint == 'M6', name %in% flow.stat.signif.M6$name) |> 
  select(ID, group, name, value)  |> 
  mutate(name = sub('\\)', ' MFI',
                    sub('Median \\(', '', 
                        sub("Freq. of Parent", "Freq.", 
                            sub('.*ive/', '', name))))) |> 
  pivot_wider(names_from = 'name', values_from = 'value') |> 
  arrange(group) |> 
  column_to_rownames('ID')

scaled.expr = t(scale(log1p(m6.signif.df[,-1])))

col_fun = colorRamp2(c(-4, -2, 0, 2, 4), c('darkblue', 'blue', 'white', 'red', 'darkred'))

column_ha = HeatmapAnnotation(Treatment = m6.signif.df$group,
                              col = list(Treatment = c("TAU" = "#66C2A5", 
                                                       "Naltrexone" = "#8DA0CB")))

ht_list = Heatmap(scaled.expr,  name = "z-score",
                  split = 2, column_split = 2,
                  column_title = NULL,
                  row_title = NULL,
                  top_annotation = column_ha,
                  show_row_names = T,
                  show_column_names = F,
                  col = col_fun,
                  row_names_gp = gpar(fontsize = 6),
                  column_names_rot = 45,
                  heatmap_width = unit(10, "cm"), 
                  heatmap_height =  unit(16, "cm"),
                  border = TRUE, )

draw(ht_list, heatmap_legend_side = "left", annotation_legend_side = "left", 
     column_title = "Month 6")

vl.plot  <- unstim.df |> 
  mutate(data = ifelse(grepl('(27|28|30|42)', ID), 'flow+multiome', 'flow')) |> 
  filter(group != 'Viremic Control') |> 
  ggplot(aes(x = group, y = `Viral load`, fill = group)) +
  geom_boxplot(outlier.shape = NA) +
  geom_jitter(size = 2, aes(shape = data),  
               position = position_jitterdodge(jitter.width = 0.1)) +
  scale_y_continuous(transform = 'log10') +
  stat_compare_means(method = 'wilcox')+
  scale_fill_manual(values = c( "#8DA0CB", "#66C2A5"))+ 
  scale_shape_manual(values = c(21,22)) +
  guides(fill = guide_legend(override.aes=list(shape = c(21)))) +
  facet_wrap(~ timepoint) 

#ggsave('results/figures/flow_cytometry/boxplot_VL.pdf',
#       vl.plot, scale = 0.7)

cd4.plot <- unstim.df |> 
  mutate(data = ifelse(grepl('(27|28|30|42)', ID), 'flow+multiome', 'flow')) |> 
  filter(group != 'Viremic Control') |> 
  ggplot(aes(x = group, y = CD4, fill = group)) +
  geom_boxplot(outlier.shape = NA) +
  geom_jitter(size = 2, aes(shape = data),  
               position = position_jitterdodge(jitter.width = 0.1)) +
  scale_y_continuous(transform = 'log10') +
  stat_compare_means(method = 'wilcox')+
  scale_fill_manual(values = c( "#8DA0CB", "#66C2A5"))+ 
  scale_shape_manual(values = c(21,22)) +
  guides(fill = guide_legend(override.aes=list(shape = c(21)))) +
  facet_wrap(~ timepoint) +
  ylab('CD4 counts')

#ggsave('results/figures/flow_cytometry/boxplot_CD4.pdf',
#       cd4.plot, scale = 0.7)
```

